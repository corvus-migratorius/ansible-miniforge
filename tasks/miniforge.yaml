---
# tasks file for playbooks/roles/miniforge

- name: "Build miniforge basic facts ({{ loop_username }})"
  ansible.builtin.set_fact:
    miniforge_dir: "/home/{{ loop_username }}/miniforge3"
    installation_script_name: "Miniforge3-{{ ansible_system }}-{{ ansible_architecture }}"


- name: "Build miniforge path facts ({{ loop_username }})"
  ansible.builtin.set_fact:
    miniforge_script_path: "/home/{{ loop_username }}/{{ installation_script_name }}.sh"
    mamba_bin_path: "{{ miniforge_dir }}/bin/mamba"


- name: "Display miniforge script version ({{ loop_username }})"
  ansible.builtin.debug:
    msg: "{{ miniforge_script_path }}"


- name: "Ensure exists {{ loop_username }}"
  ansible.builtin.user:
    name: "{{ loop_username }}"
    state: present
    create_home: true


- name: "Install miniforge"
  become: true
  vars:
    allow_world_readable_tmpfiles: true
  become_user: "{{ loop_username }}"
  block:
    - name: "Check Mamba availability ({{ loop_username }})"
      changed_when: false
      ansible.builtin.command:
        cmd: "{{ mamba_bin_path }} info"

  rescue:
    - name: "Download miniforge ({{ loop_username }})"
      # vars:
      #   allow_world_readable_tmpfiles: true
      ansible.builtin.get_url:
        url: "https://github.com/conda-forge/miniforge/releases/download/{{ release_version }}/{{ installation_script_name }}.sh"
        dest: "{{ miniforge_script_path }}"
        mode: "0600"

    - name: "Install miniforge in a non-interactive mode ({{ loop_username }})"
      ansible.builtin.command:
        cmd: "/bin/bash {{ miniforge_script_path }} -b"
        creates: "/home/{{ loop_username }}/miniforge3"

    - name: "Initialize Mamba/Conda ({{ loop_username }})"
      changed_when: false
      ansible.builtin.command:
        cmd: "{{ mamba_bin_path }} init"

    - name: "Check if Mamba has become available ({{ loop_username }})"
      changed_when: false
      ansible.builtin.command:
        cmd: "{{ mamba_bin_path }} info"


- name: "Deploy default .condarc if it doesn't exist already ({{ loop_username }})"
  become: true
  become_user: "{{ loop_username }}"
  block:
    - name: "Check if .condarc already exists ({{ loop_username }})"
      register: this
      failed_when: this.stat.exists is false
      ansible.builtin.stat:
        path: "/home/{{ loop_username }}/.condarc"

  rescue:
    - name: "Set default .condarc from external file if provided ({{ loop_username }})"
      ansible.builtin.copy:
        dest: "/home/{{ loop_username }}/.condarc"
        src: "{{ condarc_file }}"
        mode: "0600"
      when: condarc_file is defined and condarc_file != ""

    - name: "Set default content via .condarc ({{ loop_username }})"
      ansible.builtin.copy:
        dest: "/home/{{ loop_username }}/.condarc"
        content: "{{ condarc | to_nice_yaml }}"
        mode: "0600"
      when: condarc_file is not defined or condarc_file == ""

- name: "Deploy environments from files for {{ loop_username }}"
  become: true
  become_user: "{{ loop_username }}"
  with_items: "{{ user_env_files[loop_username] }}"
  loop_control:
    loop_var: env_file
  ansible.builtin.command:
    cmd: >
      {{ mamba_bin_path }} env create -f {{ env_file }}