---
# These variables are registered as host vars, for whatever deep reason
- name: "Get current user entity info ({{ user.name }})"
  ansible.builtin.getent:
    database: passwd
    key: "{{ user.name }}"
    split: ":"

- name: "Get current user home directory ({{ user.name }}"
  ansible.builtin.set_fact:
    homedir: "{{ getent_passwd[user.name][4] }}"

- name: "Set miniforge dir ({{ user.name }}"
  ansible.builtin.set_fact:
    miniforge_dir: "{{ homedir }}/miniforge3"

- name: "Build miniforge bin path ({{ user.name }})"
  ansible.builtin.set_fact:
    mamba_bin_path: "{{ miniforge_dir }}/bin/mamba"

- name: "Display miniforge script path ({{ user.name }})"
  ansible.builtin.debug:
    msg: "{{ miniforge_script_path }}"

- name: "Install miniforge ({{ user.name }})"
  become: true
  become_user: "{{ user.name }}"
  vars:
    allow_world_readable_tmpfiles: true
  block:
    - name: "Check Mamba availability ({{ user.name }})"
      changed_when: false
      ansible.builtin.command:
        cmd: "{{ mamba_bin_path }} info"
  rescue:
    - name: "Install miniforge in a non-interactive mode ({{ user.name }})"
      ansible.builtin.command:
        cmd: "/bin/bash {{ miniforge_script_path }} -b"
        creates: "{{ homedir }}/miniforge3"

    - name: "Initialize Mamba/Conda ({{ user.name }})"
      changed_when: false
      ansible.builtin.command:
        cmd: "{{ mamba_bin_path }} init"

    - name: "Check if Mamba has become available ({{ user.name }})"
      changed_when: false
      ansible.builtin.command:
        cmd: "{{ mamba_bin_path }} info"


- name: "Deploy default .condarc if it doesn't exist already ({{ user.name }})"
  become: true
  become_user: "{{ user.name }}"
  block:
    - name: "Check if .condarc already exists ({{ user.name }})"
      register: this
      failed_when: this.stat.exists is false
      ansible.builtin.stat:
        path: "{{ homedir }}/.condarc"

  rescue:
    - name: "Set default .condarc from external file if provided ({{ user.name }})"
      when: condarc_file is defined and condarc_file != ""
      ansible.builtin.copy:
        src: "{{ condarc_file }}"
        dest: "{{ homedir }}/.condarc"
        mode: "0600"

    - name: "Set default content via .condarc ({{ user.name }})"
      when: condarc_file is not defined or condarc_file == ""
      ansible.builtin.copy:
        dest: "{{ homedir }}/.condarc"
        content: "{{ condarc | to_nice_yaml }}"
        mode: "0600"

- name: "Deploy manifest files for user: {{ user.name }}"
  when:
    - "manifest_dir is defined"
    - "user.mamba_envs is defined"
  loop: "{{ user.mamba_envs }}"
  become: true
  become_user: "{{ user.name }}"
  ansible.builtin.copy:
    src: "{{ manifest_dir }}/{{ item }}"
    dest: "{{ homedir }}/{{ item }}"
    owner: "{{ user.name }}"
    group: "{{ user.name }}"
    mode: "0660"

- name: "Create environments from deployed manifests for user: {{ user.name }}"
  when:
    - "user.mamba_envs is defined"
    - "create_envs is true"
  loop: "{{ user.mamba_envs }}"
  become: true
  become_user: "{{ user.name }}"
  ansible.builtin.shell:
    cmd: "{{ homedir }}/miniforge3/bin/mamba env create -f {{ homedir }}/{{ item }}"
    executable: /bin/bash
    creates: "{{ homedir }}/miniforge3/envs/{{ item | split('.') | first }}"
